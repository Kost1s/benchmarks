#!/usr/bin/env bash
##
## Copyright 2015-2023 Real Logic Limited.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
## https://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##

##
# Example: Invoking `benchmark-runner` from the `scripts` directory.
#
# $ ./benchmark-runner --output-file "echo-test" --message-rate "1000,5000" --burst-size "1,10" --message-length "32,288,1344" "aeron/echo-client"
##

set -euxo pipefail

runs=3
iterations=10
messageRates=(100000)
burstSizes=(1 10)
messageLengths=(32 288 1344)

while [[ $# -gt 0 ]]
do
  option="${1}"
  case ${option} in
    -o|--output-file)
      outputFileName="${2}";
      shift
      shift
      ;;
    -m|--message-rate)
      IFS=',';
      read -ra messageRates <<< "${2}"
      unset IFS;
      shift
      shift
      ;;
    -b|--burst-size)
      IFS=',';
      read -ra burstSizes <<< "${2}"
      unset IFS;
      shift
      shift
      ;;
    -l|--message-length)
      IFS=',';
      read -ra messageLengths <<< "${2}"
      unset IFS;
      shift
      shift
      ;;
    -i|--iterations)
      iterations="${2}";
      shift
      shift
      ;;
    -r|--runs)
      runs="${2}";
      shift
      shift
      ;;
    -h|--help)
      echo "${0} (-o|--output-file) \"\${output-file-name-prefix}\" [(-m|--message-rate) \"\${message-rate-csv}\"] [(-b|--burst-size) \"\${burst-size-csv}\"] [(-l|--message-length) \"\${message-length-in-bytes-csv}\"] [(-i|--iterations) \${iterations}] [(-r|--runs) \${runs}] \"\${command} \${cmdArg1} ...\""
      exit
      ;;
    *)
      command="${1}"
      shift
      ;;
  esac
done

if [[ -z "${outputFileName+''}" ]];
then
  echo 'Flag -o/--output-file is required'
  exit 1
fi

EXISTING_JVM_OPTS=${JVM_OPTS}

for messageRate in "${messageRates[@]}"
do
  for burst in "${burstSizes[@]}"
  do
    for messageLength in "${messageLengths[@]}"
    do
      for (( r=1; r<=runs; r++ ))
      do
        echo -e '\n### Benchmark run #'$((r + 1))' ...\n'

        JVM_OPTS="${EXISTING_JVM_OPTS} \
        -Duk.co.real_logic.benchmarks.remote.output.file=${outputFileName} \
        -Duk.co.real_logic.benchmarks.remote.iterations=${iterations} \
        -Duk.co.real_logic.benchmarks.remote.message.rate=${messageRate# } \
        -Duk.co.real_logic.benchmarks.remote.batch.size=${burst# } \
        -Duk.co.real_logic.benchmarks.remote.message.length=${messageLength# }" \
         ${command}
      done
    done
  done
done

JVM_OPTS=${EXISTING_JVM_OPTS}